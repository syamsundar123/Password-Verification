
import numpy as np
def bell_number(n):

    dp = np.ndarray(shape = (n,n),dtype = int)
    dp[0][0] = 1
    for i in range(1,n):
        dp[i][0] = dp[i-1][i-1]
        for j in range(1,i+1):
            
            dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1]
            j += 1
    
    return dp[n-1][n-1]
    
    
if __name__ == '__main__':
    T = int(input())
    for t in range(T):
        n = int(input())
        result = bell_number(n)
        print(result%((10^9)+7))
